package elementicraft.client;

import org.lwjgl.opengl.GL11;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;

// Date: 24/07/2016 20:58:26
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX


import net.minecraft.entity.Entity;
import net.minecraft.entity.SharedMonsterAttributes;
import net.minecraft.entity.ai.EntityAIAttackMelee;
import net.minecraft.entity.ai.EntityAIHurtByTarget;
import net.minecraft.entity.ai.EntityAILookIdle;
import net.minecraft.entity.ai.EntityAIMoveTowardsRestriction;
import net.minecraft.entity.ai.EntityAINearestAttackableTarget;
import net.minecraft.entity.ai.EntityAIPanic;
import net.minecraft.entity.ai.EntityAISwimming;
import net.minecraft.entity.ai.EntityAIWatchClosest;
import net.minecraft.entity.monster.EntityMob;
import net.minecraft.entity.passive.EntityCow;
import net.minecraft.entity.passive.EntityPig;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.Item;
import net.minecraft.world.World;




public class water_elemental extends ModelBase
{
  //fields
    ModelRenderer cube1;
    ModelRenderer head;
    ModelRenderer cube2;
    ModelRenderer body;
    ModelRenderer cube3;
    ModelRenderer rightarm;
    ModelRenderer body2;
    ModelRenderer leftarm;
    ModelRenderer antene1;
    ModelRenderer righthand;
    ModelRenderer antene2;
    ModelRenderer lefthand;
    ModelRenderer antene3;
    ModelRenderer oeildroite;
    ModelRenderer antene4;
    ModelRenderer oeilgauche;
    ModelRenderer antenedroite;
    ModelRenderer antenegauche;


  
  public water_elemental()
  {
    textureWidth = 64;
    textureHeight = 32;
    
    cube1 = new ModelRenderer(this, 0, 14);
    cube1.addBox(-2.733333F, 0F, -2F, 2, 2, 2);
    cube1.setRotationPoint(4F, 13F, -4F);
    cube1.setTextureSize(64, 32);
    cube1.mirror = true;
    setRotation(cube1, 0.2230717F, 0.2602503F, 0.669215F);
    head = new ModelRenderer(this, 0, 0);
    head.addBox(-4F, -8F, -4F, 8, 7, 7);
    head.setRotationPoint(0F, 0.5333334F, 0F);
    head.setTextureSize(64, 32);
    head.mirror = true;
    setRotation(head, 0F, 0F, 0F);
    cube2 = new ModelRenderer(this, 46, 6);
    cube2.addBox(-1.866667F, -1.733333F, -1.4F, 3, 3, 3);
    cube2.setRotationPoint(-2.066667F, 14.2F, 1F);
    cube2.setTextureSize(64, 32);
    cube2.mirror = true;
    setRotation(cube2, 0.7519374F, 0.7435722F, 0.7063936F);
    body = new ModelRenderer(this, 0, 18);
    body.addBox(-4F, 0F, -2F, 8, 8, 4);
    body.setRotationPoint(0F, 0F, 0F);
    body.setTextureSize(64, 32);
    body.mirror = true;
    setRotation(body, 0F, 0F, 0F);
    cube3 = new ModelRenderer(this, 46, 0);
    cube3.addBox(-1.6F, -2.066667F, -1.4F, 3, 3, 3);
    cube3.setRotationPoint(2.133333F, 17.26667F, -1.8F);
    cube3.setTextureSize(64, 32);
    cube3.mirror = true;
    setRotation(cube3, -0.5121354F, -0.4833219F, -0.7481163F);
    rightarm = new ModelRenderer(this, 24, 19);
    rightarm.addBox(-3F, -2F, -2F, 4, 9, 4);
    rightarm.setRotationPoint(-5F, 2F, 0F);
    rightarm.setTextureSize(64, 32);
    rightarm.mirror = true;
    setRotation(rightarm, -0.1047198F, 0F, 0.4363323F);
    body2 = new ModelRenderer(this, 0, 23);
    body2.addBox(0F, 0F, 0F, 6, 2, 4);
    body2.setRotationPoint(-3F, 8F, -2F);
    body2.setTextureSize(64, 32);
    body2.mirror = true;
    setRotation(body2, 0F, 0F, 0F);
    leftarm = new ModelRenderer(this, 40, 19);
    leftarm.addBox(-1F, -2F, -2F, 4, 9, 4);
    leftarm.setRotationPoint(5F, 2F, 0F);
    leftarm.setTextureSize(64, 32);
    leftarm.mirror = true;
    setRotation(leftarm, -0.1047198F, 0F, -0.4363323F);
    antene1 = new ModelRenderer(this, 9, 14);
    antene1.addBox(0F, 0F, 0F, 1, 3, 1);
    antene1.setRotationPoint(2F, -12F, -3F);
    antene1.setTextureSize(64, 32);
    antene1.mirror = true;
    setRotation(antene1, 0F, 0F, 0F);
    righthand = new ModelRenderer(this, 30, 0);
    righthand.addBox(-4F, -1F, -1F, 4, 5, 4);
    righthand.setRotationPoint(-6F, 7F, -2F);
    righthand.setTextureSize(64, 32);
    righthand.mirror = true;
    setRotation(righthand, -0.5235988F, -0.0698132F, 0.1745329F);
    antene2 = new ModelRenderer(this, 9, 14);
    antene2.addBox(0F, 0F, 0F, 1, 3, 1);
    antene2.setRotationPoint(-3F, -12F, -1F);
    antene2.setTextureSize(64, 32);
    antene2.mirror = true;
    setRotation(antene2, 0F, 0F, 0F);
    lefthand = new ModelRenderer(this, 30, 9);
    lefthand.addBox(0F, -1F, -2F, 4, 5, 4);
    lefthand.setRotationPoint(6F, 7F, -2F);
    lefthand.setTextureSize(64, 32);
    lefthand.mirror = true;
    setRotation(lefthand, -0.5235988F, -0.0698132F, -0.1745329F);
    antene3 = new ModelRenderer(this, 9, 14);
    antene3.addBox(0F, 0F, 0F, 1, 3, 1);
    antene3.setRotationPoint(0F, -14F, 1F);
    antene3.setTextureSize(64, 32);
    antene3.mirror = true;
    setRotation(antene3, 0F, 0F, 0F);
    oeildroite = new ModelRenderer(this, 58, 0);
    oeildroite.addBox(-1F, 0F, -1F, 2, 2, 1);
    oeildroite.setRotationPoint(-2F, -5F, -3.2F);
    oeildroite.setTextureSize(64, 32);
    oeildroite.mirror = true;
    setRotation(oeildroite, 0F, 0F, 0F);
    antene4 = new ModelRenderer(this, 9, 14);
    antene4.addBox(0F, 0F, 0F, 1, 3, 1);
    antene4.setRotationPoint(4F, -6F, -1F);
    antene4.setTextureSize(64, 32);
    antene4.mirror = true;
    setRotation(antene4, 2.193538F, 0F, 0F);
    oeilgauche = new ModelRenderer(this, 58, 0);
    oeilgauche.addBox(-1F, 0F, -1F, 2, 2, 1);
    oeilgauche.setRotationPoint(2F, -5F, -3.2F);
    oeilgauche.setTextureSize(64, 32);
    oeilgauche.mirror = true;
    setRotation(oeilgauche, 0F, 0F, 0F);
    antenedroite = new ModelRenderer(this, 9, 14);
    antenedroite.addBox(0F, 0F, 0F, 1, 3, 1);
    antenedroite.setRotationPoint(-5F, -6F, -1F);
    antenedroite.setTextureSize(64, 32);
    antenedroite.mirror = true;
    setRotation(antenedroite, 2.193538F, 0F, 0F);
    antenegauche = new ModelRenderer(this, 9, 14);
    antenegauche.addBox(0F, 0F, 0F, 1, 3, 1);
    antenegauche.setRotationPoint(4F, -6F, -1F);
    antenegauche.setTextureSize(64, 32);
    antenegauche.mirror = true;
    setRotation(antenegauche, 2.193538F, 0F, 0F);

  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
	super.render(entity,f, f1, f2, f3, f4, f5);
	setRotationAngles(f, f1, f2, f3, f4, f5,entity);
	
    
	GL11.glPushMatrix();  
	GL11.glEnable(GL11.GL_NORMALIZE);  
	GL11.glEnable(GL11.GL_BLEND);  
	GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);    
	GL11.glColor4f(1F, 1F, 1F, 0.75F);    
	
	super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5,entity);
    cube1.render(f5);
    head.render(f5);
    cube2.render(f5);
    body.render(f5);
    cube3.render(f5);
    rightarm.render(f5);
    body2.render(f5);
    leftarm.render(f5);
    antene1.render(f5);
    righthand.render(f5);
    antene2.render(f5);
    lefthand.render(f5);
    antene3.render(f5);
    oeildroite.render(f5);
    antene4.render(f5);
    oeilgauche.render(f5);
    antenedroite.render(f5);
    antenegauche.render(f5);


	GL11.glDisable(GL11.GL_BLEND);  
	GL11.glPopMatrix();
    
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
	    super.setRotationAngles(f, f1, f2, f3, f4, f5,entity);
  }

}
